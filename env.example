# An example .env file, which is used by the docker compose container.
# Copy this file, rename it to `.env`, and edit your copy to use it.

# Password for the HTTPS certificate. NOT the same as Tyler's X509_PASSWORD
CERT_PASSWORD=
# If true, will try to use lets encrypt to get a certificate
USE_LETSENCRYPT=True
# The URL that the external clients see when talking to the proxy server
EXTERNAL_DOMAIN=efile.example.com
TZ=America/New_York

##### Postgres / database environment variables #####
POSTGRES_USER=postgres
# On the first start of the postgres container, this will be the password.
# After docker volume is created, the postgres container password won't be changed!
POSTGRES_PASSWORD=mysecretpassword
# This is the URL that the proxy server will try to use to connect to the database.
# If you don't change `docker-compose` at all, then this should stay the same
POSTGRES_URL=db
POSTGRES_PORT=5432
POSTGRES_CODES_DB=tyler_efm_codes
POSTGRES_USER_DB=user_transactions

##### Email sending related environment variables #####
EMAIL_METHOD=sendgrid # or stmp
# See https://docs.sendgrid.com/ui/account-and-settings/api-keys
SENDGRID_API_KEY=SG.123.456
SMTP_SERVER=
# 587 for TLS, 465 for SSL, 24 without
SMTP_PORT=    
# lowercase true or false
SMTP_ENABLE_AUTH=  
SMTP_USER=
SMTP_PASSWORD=

##### Monitoring environment variables #####
# Requires the above email sending methods to be set correctly
MONITORING_EMAIL=

##### Tyler related environment variables #####
# Tyler controls several configs through "codes", that you need to download
# every night between 2 and 3. To get the up-to-date links to download the codes
# you need to provide an admin login for Tyler's EFM
TYLER_USER_EMAIL=
TYLER_USER_PASSWORD=
# The jurisdictions of this Tyler EFM, separated by spaces
TYLER_JURISDICTIONS=illinois
TYLER_ENV=stage
# Tyler has a way to pay for your filing with a credit card using their own portal,
# this is that URL and the Key that is used
TOGA_URL=
# The TOGA_CLIENT_KEYS depends on the jurisdiction being used. It's a series of
# space separated keys, the same length as TYLER_JURISDICTIONS
TOGA_CLIENT_KEYS=
# Tyler requires all SOAP messages to be signed with an X.509 certificate they provide,
# these variables are the path to that cert and it's password
PATH_TO_KEYSTORE=MyOrg.pfx
X509_PASSWORD=

##### JeffNet related environment variables #####
# The URL given by JeffNet to send filings
JEFFERSON_ENDPOINT=https://example.com
# The API Key that is sent with every request to the above URL.
# NOTE: this ONLY needs to be in the Docassemble server.
JEFFERSON_KEY=

##### Secured Files #####
# These are secured files that are stored in encrypted cloud storage. Use this for any secured files that are not
# baked into your Docker image. This is useful in the case of continuous deployment.
# For Fly.io, this is the private Tigris (S3-compatible object store) URL to the cert referenced by PATH_TO_KEYSTORE
#S3_TO_KEYSTORE_CERT=s3://my-tigris-url/MyOrg.pfx
# Private Tigris URL to the client_sign.properties
#S3_TO_CLIENT_SIGN_PROPERTIES=s3://my-tigris-url/client_sign.properties

# Fly.io Tigris
#BUCKET_NAME=
#AWS_ENDPOINT_URL_S3=https://fly.storage.tigris.dev
#AWS_ACCESS_KEY_ID=tid_{YOUR_VALUE}
#AWS_SECRET_ACCESS_KEY=tsec_{YOUR_VALUE}

##### PAPERTRAIL #####
# Ships logs to the Papertrail service. To disable this, leave the PAPERTRAIL_HOST unset.
#PAPERTRAIL_HOST=
#PAPERTRAIL_PORT=
# You should identify the environment in the name to make it easy to filter when viewing the logs
# e.g. efsp-staging, efsp-prod
#PAPERTRAIL_APP_NAME=my-efsp

##### Code Updater #####
# Set to true to disable the Quartz Schedule for the Tyler EFM CodeUpdater. Since we don't support a clustered
# environment yet, this is recommended when running multiple instances.
# Leave commented out or set to false if you are only running a single EFSP instance and want to run the CodeUpdater
# automatically within the instance.
#DISABLE_SCHEDULE_FOR_CODE_UPDATE=false
# Leave commented out or set to false to have the CodeUpdater run daily at around 2:15 am.
# Set to true to immediately run the Tyler EFM CodeUpdater upon startup. This is useful for testing.
#SCHEDULE_CODE_UPDATE_IMMEDIATELY=false